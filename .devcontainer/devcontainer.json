{
  "name": "Qwik + LIT + Builder.io + Supabase + Cloudflare",
  "image": "mcr.microsoft.com/devcontainers/typescript-node:1-20-bullseye",
  
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true
    }
  },
  
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "typescript.updateImportsOnFileMove.enabled": "always",
        "typescript.preferences.importModuleSpecifier": "shortest",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"
        },
        "eslint.validate": ["javascript", "typescript", "javascriptreact", "typescriptreact"],
        "tailwindCSS.experimental.classRegex": [
          ["classList={{([^}]*)\\}}", "\\s*?[\"'`]([^\"'`]*).*?:"],
          ["class:\\s*[\"'`]([^\"'`]*)[\"'`]", "([^\\s]+)"],
          ["class=\"([^\"]*)\"", "([^\\s]+)"]
        ],
        "tailwindCSS.includeLanguages": {
          "typescript": "javascript",
          "typescriptreact": "javascript"
        },
        "files.associations": {
          "*.css": "tailwindcss",
          "wrangler.toml": "toml"
        },
        "typescript.tsserver.maxTsServerMemory": 4096,
        "search.exclude": {
          "**/node_modules": true,
          "**/dist": true,
          "**/.turbo": true,
          "**/.wrangler": true,
          "**/coverage": true
        },
        // Qwik-specific settings
        "qwik.enableCodeLens": true,
        "qwik.enableTypeChecking": true,
        // LIT-specific settings  
        "lit-plugin.strict": true,
        "lit-plugin.rules.no-unknown-tag-name": "error"
      },
      
      "extensions": [
        // Core development
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode", 
        "ms-vscode.vscode-typescript-next",
        "usernamehw.errorlens",
        
        // Framework-specific
        "qwik.qwik-vscode",
        "runem.lit-plugin",
        "bradlc.vscode-tailwindcss",
        
        // Testing & Quality
        "vitest.explorer",
        "ms-playwright.playwright",
        "snyk-security.snyk-vulnerability-scanner",
        
        // Git & Collaboration
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "github.copilot",
        "github.copilot-chat",
        
        // Utilities (cleaned up)
        "christian-kohler.path-intellisense",
        "streetsidesoftware.code-spell-checker",
        
        // File support
        "yzhang.markdown-all-in-one",
        "mikestead.dotenv",
        "tamasfe.even-better-toml",
        
        // Cloud services
        "cloudflare.wrangler-vscode",
        "supabase.supabase"
      ]
    },
    
    "codespaces": {
      "openFiles": [
        "README.md",
        ".env.example",
        "src/routes/index.tsx"
      ]
    }
  },
  
  "forwardPorts": [
    5173,    // Vite dev server (primary)
    8787     // Wrangler dev server (primary)
  ],
  
  "portsAttributes": {
    "5173": {
      "label": "Qwik Dev Server",
      "onAutoForward": "notify"
    },
    "8787": {
      "label": "Cloudflare Workers",
      "onAutoForward": "silent"
    }
  },
  
  "postCreateCommand": ".devcontainer/scripts/post-create.sh",
  "postStartCommand": ".devcontainer/scripts/post-start.sh", 
  "postAttachCommand": ".devcontainer/scripts/post-attach.sh",
  
  "remoteEnv": {
    "NODE_ENV": "development",
    "CODESPACES": "true",
    "DEPLOY_TARGET": "cloudflare",
    "SKIP_INTERACTIVE": "true",
    "QWIK_INSIGHTS": "false"
  },
  
  "mounts": [
    "source=node_modules-volume,target=${containerWorkspaceFolder}/node_modules,type=volume",
    "source=wrangler-volume,target=${containerWorkspaceFolder}/.wrangler,type=volume",
    "source=pnpm-cache-volume,target=/home/node/.pnpm-store,type=volume"
  ],
  
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined", 
    "--init",
    "--memory=7g",
    "--cpus=2"
  ],
  
  "remoteUser": "node",
  "updateContentCommand": "command -v pnpm >/dev/null 2>&1 && pnpm install || npm install",
  
  "onCreateCommand": {
    "setup-pnpm": "npm install -g pnpm@latest && pnpm config set store-dir /home/node/.pnpm-store && pnpm config set prefer-offline true",
    "install-tools": "npm install -g wrangler@latest @builder.io/cli@latest",
    "install-supabase": "curl -sSfL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xzf - && sudo mv supabase /usr/local/bin/ || npm install -g @supabase/supabase-js@latest",
    "setup-git": "git config --global core.editor 'code --wait' || true",
    "create-dirs": "mkdir -p .vscode tmp logs .cache .devcontainer src/components stories"
  },
  
  "waitFor": "onCreateCommand"
}
