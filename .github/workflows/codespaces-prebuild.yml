name: Codespaces Prebuild

on:
  push:
    branches:
      - main
  
  pull_request:
    types: [opened, synchronize]
  
  schedule:
    - cron: '0 0 * * 0'
  
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  prebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run build
        run: pnpm build

      - name: Run type check
        run: pnpm type-check

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Cache playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps

      - name: Prebuild Docker images
        run: |
          docker pull postgres:16-alpine
          docker pull redis:7-alpine
          docker pull minio/minio:latest
          docker pull adminer:latest
          docker pull mailhog/mailhog:latest

      - name: Create prebuild
        uses: github/codespaces-prebuild@v1
        with:
          regions: 'WestUs2,EastUs,WestEurope,SoutheastAsia'
          sku_name: 'premiumLinux'